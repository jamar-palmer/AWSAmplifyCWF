{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n *\n * @deprecated\n */\n\nvar ProviderError =\n/** @class */\nfunction (_super) {\n  __extends(ProviderError, _super);\n\n  function ProviderError(message, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.tryNextLink = tryNextLink;\n    return _this;\n  }\n\n  ProviderError.from = function (error, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false\n    });\n    return error;\n  };\n\n  return ProviderError;\n}(Error);\n\nexport { ProviderError };\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\n\nvar CredentialsProviderError =\n/** @class */\nfunction (_super) {\n  __extends(CredentialsProviderError, _super);\n\n  function CredentialsProviderError(message, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.tryNextLink = tryNextLink;\n    _this.name = \"CredentialsProviderError\";\n    return _this;\n  }\n\n  CredentialsProviderError.from = function (error, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    Object.defineProperty(error, \"tryNextLink\", {\n      value: tryNextLink,\n      configurable: false,\n      enumerable: false,\n      writable: false\n    });\n    return error;\n  };\n\n  return CredentialsProviderError;\n}(Error);\n\nexport { CredentialsProviderError };","map":null,"metadata":{},"sourceType":"module"}