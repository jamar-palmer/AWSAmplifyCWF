{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetMapSpritesRequest, GetMapSpritesResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetMapSpritesCommand, serializeAws_restJson1GetMapSpritesCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the sprite sheet corresponding to a map resource. The sprite sheet is a PNG\n *             image paired with a JSON document describing the offsets of individual icons that will\n *             be displayed on a rendered map.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LocationClient, GetMapSpritesCommand } from \"@aws-sdk/client-location\"; // ES Modules import\n * // const { LocationClient, GetMapSpritesCommand } = require(\"@aws-sdk/client-location\"); // CommonJS import\n * const client = new LocationClient(config);\n * const command = new GetMapSpritesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetMapSpritesCommandInput} for command's `input` shape.\n * @see {@link GetMapSpritesCommandOutput} for command's `response` shape.\n * @see {@link LocationClientResolvedConfig | config} for command's `input` shape.\n *\n */\n\nvar GetMapSpritesCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetMapSpritesCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetMapSpritesCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetMapSpritesCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"LocationClient\";\n    var commandName = \"GetMapSpritesCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetMapSpritesRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetMapSpritesResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetMapSpritesCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1GetMapSpritesCommand(input, context);\n  };\n\n  GetMapSpritesCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1GetMapSpritesCommand(output, context);\n  };\n\n  return GetMapSpritesCommand;\n}($Command);\n\nexport { GetMapSpritesCommand };","map":null,"metadata":{},"sourceType":"module"}